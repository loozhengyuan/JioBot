name: Build Workflow

push:
  branches:
    - master  

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        make install
    - name: Lint with flake8
      run: |
        make lint

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Build the Docker image
      run: |
        docker build --tag jiobot:latest .
    - name: Tag Docker image
      run: |
        docker tag jiobot:latest ${GITHUB_REPOSITORY}:latest
        docker tag jiobot:latest ${GITHUB_REPOSITORY}:${GITHUB_SHA}
        docker tag jiobot:latest ${AWS_REPOSITORY}:latest
        docker tag jiobot:latest ${AWS_REPOSITORY}:${GITHUB_SHA}
      env:
        AWS_REPOSITORY: ${{ secrets.AWS_REPOSITORY }}
    - name: Push image to Docker Hub
      run: |
        echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin
        docker push ${GITHUB_REPOSITORY}:${GITHUB_SHA}
        docker push ${GITHUB_REPOSITORY}:latest
        docker logout
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push image to AWS ECR
      run: |
        $(aws ecr get-login --no-include-email --region ap-southeast-1)
        docker push ${AWS_REPOSITORY}:${GITHUB_SHA}
        docker push ${AWS_REPOSITORY}:latest
        docker logout
      env:
        AWS_REPOSITORY: ${{ secrets.AWS_REPOSITORY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
